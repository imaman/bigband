# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but for all branches
  push:
    branches:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ci-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.0
        with:
          # Set always-auth in npmrc
          always-auth: false # optional, default is false

          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: 16.11.1 # optional

          # File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version
          # node-version-file: # optional

          # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
          # architecture: # optional

          # Set this option if you want the action to check for the latest available version that satisfies the version spec
          check-latest: true # optional

          # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
          # registry-url: # optional

          # Optional scope for authenticating against scoped registries
          # scope: # optional

          # Used to pull node distributions from node-versions.  Since there's a default, this is typically not supplied by the user.
          # token: # optional, default is ${{ github.token }}

          # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm
          cache: yarn # optional

          # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
          cache-dependency-path: yarn.lock # optional

          # Deprecated. Use node-version instead. Will not be supported after October 1, 2019
          # version: # optional
      - name: preliminaries
        run: |
          echo running node --version
          node --version
          echo running npm --version
          npm --version
          echo running yarn --version
          yarn --version
      - name: install
        run: yarn --frozen-lockfile
      - name: build and test
        run: |
          yarn test
        env:
          s3_cache: ${{ secrets.S3_CACHE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: antelope-${{ github.run_number }}
          path: |
            .build-raptor/**/*
            !.build-raptor/cache/**/*
